# Generated by Django 4.2 on 2023-05-23 15:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dogadjaj',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=50)),
                ('adresa', models.CharField(max_length=50)),
                ('datum_vreme', models.DateTimeField()),
                ('slika', models.ImageField(default='slike/dogadjaji/dogadjajDefault.png', upload_to='slike/dogadjaji')),
                ('status', models.CharField(default='planiran', max_length=50)),
                ('opis', models.CharField(max_length=300)),
                ('kratak_opis', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Dogadjaj',
            },
        ),
        migrations.CreateModel(
            name='Grad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'grad',
            },
        ),
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('ime', models.CharField(max_length=30)),
                ('prezime', models.CharField(max_length=30)),
                ('prosecna_ocena', models.FloatField(default=0.0)),
                ('zbir_ocena', models.IntegerField(default=0)),
                ('ukupno_recenzija', models.IntegerField(default=0)),
                ('slika', models.ImageField(default='slike/korisnici/korisnikDefault.png', upload_to='slike/korisnici')),
                ('grad', models.ForeignKey(db_column='idGrad', on_delete=django.db.models.deletion.RESTRICT, to='Aplikacija.grad')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Korisnik',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProdajnoMesto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=50)),
                ('adresa', models.CharField(max_length=50)),
                ('grad', models.ForeignKey(db_column='idGrad', on_delete=django.db.models.deletion.CASCADE, to='Aplikacija.grad')),
            ],
            options={
                'db_table': 'prodajno_mesto',
            },
        ),
        migrations.CreateModel(
            name='Karta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cena', models.FloatField()),
                ('tip', models.CharField(max_length=50)),
                ('status', models.CharField(default='slobodna', max_length=15)),
                ('dogadjaj', models.ForeignKey(db_column='idDog', on_delete=django.db.models.deletion.CASCADE, to='Aplikacija.dogadjaj')),
                ('korisnik', models.ForeignKey(db_column='idKor', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Karta',
            },
        ),
        migrations.AddField(
            model_name='dogadjaj',
            name='grad',
            field=models.ForeignKey(db_column='idGrad', on_delete=django.db.models.deletion.RESTRICT, to='Aplikacija.grad'),
        ),
        migrations.AddField(
            model_name='dogadjaj',
            name='organizator',
            field=models.ForeignKey(db_column='idOrg', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
